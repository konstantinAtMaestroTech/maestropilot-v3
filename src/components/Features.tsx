import { useRef } from 'react'
import { motion, useInView } from 'framer-motion'

// videos

import identifyComp from '../assets/videos/mobile-features/identify-component.webm'
import realtimeTracking from '../assets/videos/desktop-features/realtime-tracking.webm'

import interactiveDetail from '../assets/videos/mobile-features/interactive-detail.webm'
import complexSchedules from '../assets/videos/desktop-features/complex-schedules.webm'

import attachmentDownload from '../assets/videos/mobile-features/attachment-download.webm'
import generateReports from '../assets/videos/desktop-features/generate-reports.webm'

// Feature data
const features = [
  {
    title: "Track progress in real time",
    subtitle: 'MaestroPilot is your digital boots on the ground: with live updates from the factory and the field.',
    descriptionDesktop: "Track production and install status remotely.",
    descriptionMobile: 'Identify install location at a glance, log progress in real time.',
    mobile: identifyComp,
    desktop: realtimeTracking
  },
  {
    title: "Orchestrate your build sequence",
    subtitle: 'Interactive Instructions at your Crew\'s fingertips generated by our sequencing and planning tools.',
    descriptionDesktop: "Component-linked Gantt helps you plan and track installation tasks.",
    descriptionMobile: 'Digital directions on any device. No more paper, no more rework.',
    mobile: interactiveDetail,
    desktop: complexSchedules
  },
  {
    title: "Data-rich parts",
    subtitle: 'Attach safety protocols, certifications, and specs directly to each component. Something wrong? Handle QC with component-linked chat.',
    descriptionDesktop: "Need to generate reports and status updates for third parties in one click.",
    descriptionMobile: "Safety protocols, specs and delivery data are linked directly to your parts.",
    mobile: attachmentDownload,
    desktop: generateReports
  }
]

const Features = () => {
  const ref = useRef<HTMLDivElement>(null)
  const sectionRef = useRef<HTMLDivElement>(null)
  const isInView = useInView(ref, { once: true, amount: 0.1 })
  
  return (
    <section className="section bg-background relative" id="features" ref={sectionRef}>
      <div className="py-10 px-4">
        <div ref={ref} className="grid grid-cols-1 gap-8">
        {features.map((feature, index) => {
          const featureRef = useRef<HTMLDivElement>(null)
          
          return (
            <motion.div
              key={index}
              ref={featureRef}
              className="relative overflow-visible"
            >
              <motion.div
                className='p-6'
                initial={{ opacity: 0 }}
                animate={isInView ? { opacity: 1 } : { opacity: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
              >
                <div
                  className='h-full'
                >
                  <motion.div
                    className='flex flex-col w-full gap-5 md:gap-10'
                  >
                    <h3 className="text-3xl md:text-5xl font-semibold text-white">
                      {feature.title.split("").map((char, charIndex) => (
                        <motion.span
                          key={`${charIndex}-${char}`}
                          initial={{ opacity: 0 }}
                          whileInView={{ opacity: 1 }}
                          viewport={{ once: false }}
                          transition={{
                            duration: 0.1,
                            delay: charIndex * 0.05 + index * 0.2,
                          }}
                        >
                          {char}
                        </motion.span>
                      ))}
                    </h3>
                    <motion.h2
                      initial={{ x: 50, opacity: 0 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.5, delay: 0.6 }}
                      viewport={{ once: false }}
                      className="text-3xl md:text-5xl text-gray-300"
                    >
                      {feature.subtitle}
                    </motion.h2>
                  </motion.div>
                </div>
              </motion.div>
              <motion.div
                className='flex flex-col md:flex-row'
              >
                <motion.div
                  initial={{  y: 0 }}
                  whileHover={{  y: -10 }}
                  transition={{ duration: 0.5 }}
                  className='w-full p-3'
                >
                  <div
                    className="flex flex-col p-5 rounded-2xl w-full shadow-sm hover:shadow-md shadow-white"
                  >
                    <video
                      autoPlay 
                      loop 
                      muted
                      className="md:h-[400px] lg:h-[600px]"
                      preload='auto'
                    >
                      <source src={feature.desktop} type="video/mp4" />
                      Your browser does not support the video tag.
                    </video>
                  </div>
                  <div
                    className='flex justify-center items-center items h-20 '
                  >
                    <span
                      className='text-gray-300 text-center text-xl'
                    >
                      {feature.descriptionDesktop}
                    </span>
                  </div>
                </motion.div>
                <motion.div
                  initial={{  y: 0 }}
                  whileHover={{  y: -10 }}
                  transition={{ duration: 0.5 }}
                  className='p-3'
                >
                  <div
                    className="flex flex-col justify-center p-5 rounded-2xl shadow-sm hover:shadow-md shadow-white"
                  >
                    <video
                      autoPlay 
                      loop 
                      muted
                      className="h-[300px] sm:h-[400px] md:h-[400px] lg:h-[600px]"
                      preload="auto"  // Try "auto" instead of default
                    >
                      <source 
                        src={feature.mobile} 
                        type="video/webm"
                      />
                      Your browser does not support the video tag.
                    </video>
                  </div>
                  <div
                    className='flex justify-center items-center h-20'
                  >
                    <span
                      className='text-gray-300 text-center text-xl'
                    >
                       {feature.descriptionMobile}
                    </span>
                  </div>
                </motion.div>
              </motion.div>
            </motion.div>
          )
          })}
        </div>
      </div>
      
      {/* Background decoration */}
      <div className="absolute -bottom-12 -right-12 w-64 h-64 bg-primary-light/10 rounded-full blur-3xl -z-10" />
      <div className="absolute -top-12 -left-12 w-64 h-64 bg-secondary-light/10 rounded-full blur-3xl -z-10" />
    </section>
  )
}

export default Features 